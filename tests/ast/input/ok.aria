// ==================================================
//
//	Declarations & Definitions
//
// ==================================================

// DefinitionVariable
value a: Integer = 1;

// DefinitionFunction
function foo(a: Byte): Integer {}					// + return + parameters
function foo(a: Byte, b: Byte, c: Byte): Integer {}	// + return + parameters
function foo(a, b, c: Byte): Integer {}				// + return + parameters
function foo: Integer {}							// + return - parameters
function foo(a: Byte) {}							// - return + parameters
function foo(a: Byte, b: Byte, c: Byte) {}			// - return + parameters
function foo(a, b, c: Byte) {}						// - return + parameters
function foo {}										// - return - parameters

// DefinitionMonitor
monitor Monitor {
	// DeclarationVariable
	variable a: Integer;
	variable x, y: Integer;
	variable i, j, k, l, m, n, o: Integer;

	// DefinitionVariable
	variable a: Integer = 1;
	variable a = 1;
	value a: Integer = 1;
	value a = 1;

	// DefinitionMethod
	function foo {}
	private function foo {}

	// DefinitionConstructor
	initializer {}
}

// DefinitionMonitor
monitor Monitor {}

// ==================================================
//
//	Block
//
// ==================================================

function foo {
	// ==================================================
	//
	//	Types
	//
	// ==================================================

	// TypeId
	variable type: Integer;

	// TypeArray
	variable type: [Integer];
	variable type: [[[Integer]]];

	// Immutable
	variable type: Immutable [Integer];

	// ==================================================
	//
	//	Variable Declarations & Definitions
	//
	// ==================================================

	variable a: Integer;
	variable x, y: Integer;
	variable i, j, k, l, m, n, o: Integer;
	variable a: Integer = 1;
	variable a = 1;
	value a: Integer = 1;
	value a = 1;

	// ==================================================
	//
	//	Variables
	//
	// ==================================================

	// VariableId
	var = a;

	// VariableIndexed
	var = a[1];
	var = a[1][1][1];
	var = foo()[1][1][1];

	// ==================================================
	//
	//	Expressions
	//
	// ==================================================

	// ExpressionLiteralBoolean
	a = true;
	a = false;

	// ExpressionLiteralInteger
	a = 0;
	a = 1;
	a = 1000;

	// ExpressionLiteralFloat
	a = 0.0;
	a = 1.123;
	a = 1000.123;

	// ExpressionLiteralString
	a = "c";
	a = "string";
	a = "s p a c e d s t r i n g";

	// ExpressionLiteralArray
	a = [1];
	a = [true, false];
	a = [foo(), bar(), baz()];
	a = Immutable [-1.0, -2.0, -3.0, -4.0];

	// ExpressionVariable
	a = a;

	// ExpressionFunctionCall
	a = foo();

	// ExpressionUnary
	a = not true;
	a = -1;

	// ExpressionBinary
	a = true or false;
	a = true and false;
	a = 1 == 1;
	a = 1 != 1;
	a = 1 <= 1;
	a = 1 >= 1;
	a = 1 < 1;
	a = 1 > 1;
	a = 1 + 1;
	a = 1 - 1;
	a = 1 * 1;
	a = 1 / 1;
}
