--------------------------------------------------------------------------------
-- Title
Empty "for" statement block
-- Input
function main {
    for variable i = 0; i > 0; i = i - 1 {}
}
-- Output
function main: Void {
    for
    variable i: Integer = (0: Integer)
    ((i: Integer) >: Boolean (0: Integer))
    i: Integer = ((i: Integer) -: Integer (1: Integer))
    {
    }
}
--------------------------------------------------------------------------------
-- Title
Simple "for" statement (Integer)
-- Input
function main {
    for variable i = 0; i < 10; i = i + 1 {
        print("%d", i);
    }
}
-- Output
function main: Void {
    for
    variable i: Integer = (0: Integer)
    ((i: Integer) <: Boolean (10: Integer))
    i: Integer = ((i: Integer) +: Integer (1: Integer))
    {
        print(("%d": String), (i: Integer)): Integer
    }
}
--------------------------------------------------------------------------------
-- Title
Simple "for" statement (Float)
-- Input
function main {
    for variable i = 0.0; i != 0; i = i - 0.5 {}
}
-- Output
function main: Void {
    for
    variable i: Float = (0.000000: Float)
    ((i: Float) !=: Boolean ((0: Integer) as: Float))
    i: Float = ((i: Float) -: Float (0.500000: Float))
    {
    }
}
--------------------------------------------------------------------------------
-- Title
Simple "for" statement (Boolean)
-- Input
function main {
    for variable i = true; i; i = false {
        i = true;
    }
}
-- Output
function main: Void {
    for
    variable i: Boolean = (true: Boolean)
    (i: Boolean)
    i: Boolean = (false: Boolean)
    {
        i: Boolean = (true: Boolean)
    }
}
--------------------------------------------------------------------------------
-- Title
Scoping - invalid use of a variable defined inside the "for" statement
-- Input
function main {
    for variable i = 0; i < 10; i = i + 1 {
        print("%d", i);
    }
    i = 1;
}
-- Output
line 5:
    semantic error: unknown variable 'i' being used
--------------------------------------------------------------------------------
-- Title
Scoping - invalid redeclaration of the "for" variable
-- Input
function main {
    for variable i = 0; i < 10; i = i + 1 {
        i := 0;
    }
}
-- Output
line 3:
    semantic error: redeclaration of name 'i'
--------------------------------------------------------------------------------
-- Title
Scoping - defining a variable within the "for" statement and outside of it
-- Input
function main {
    i := 0;
    for variable i = 0.0; i < 10; i = i + 1 {
        print("%f", i);
    }
    value array: [Integer] = [i];
}
-- Output
function main: Void {
    value i: Integer = (0: Integer)
    for
    variable i: Float = (0.000000: Float)
    ((i: Float) <: Boolean ((10: Integer) as: Float))
    i: Float = ((i: Float) +: Float ((1: Integer) as: Float))
    {
        print(("%f": String), (i: Float)): Integer
    }
    value array: [Integer] = ([(i: Integer)]: [Integer])
}
--------------------------------------------------------------------------------
-- Title
Condition - invalid type
-- Input
function main {
    for variable i = 0; i; i = i + 1 {
        print("%d", i);
    }
}
-- Output
line 2:
    semantic error: invalid type 'Integer' for condition (expecting Boolean)
--------------------------------------------------------------------------------
-- Title
Numeric "for"
-- Input
function main {
    for i in [0 -> 10] {}
    for i in [0 <- 10] {}
    for i in [0 => 10] {}
    for i in [0 <= 10] {}

    for i in [0, 2 -> 10] {}
    for i in [0, 2 <- 10] {}
    for i in [0, 2 => 10] {}
    for i in [0, 2 <= 10] {}

    for i in [0, -2 <= -10] {}

    for i in [0 -> 10] {
        print(i);
    }
}
-- Output
function main: Void {
    for variable i: Integer in [(0: Integer) -> (10: Integer)] {
    }
    for variable i: Integer in [(0: Integer) <- (10: Integer)] {
    }
    for variable i: Integer in [(0: Integer) => (10: Integer)] {
    }
    for variable i: Integer in [(0: Integer) <= (10: Integer)] {
    }
    for variable i: Integer in [(0: Integer), (2: Integer) -> (10: Integer)] {
    }
    for variable i: Integer in [(0: Integer), (2: Integer) <- (10: Integer)] {
    }
    for variable i: Integer in [(0: Integer), (2: Integer) => (10: Integer)] {
    }
    for variable i: Integer in [(0: Integer), (2: Integer) <= (10: Integer)] {
    }
    for variable i: Integer in [(0: Integer), (-(2: Integer): Integer) <= (-(10: Integer): Integer)] {
    }
    for variable i: Integer in [(0: Integer) -> (10: Integer)] {
        print((i: Integer)): Integer
    }
}
--------------------------------------------------------------------------------
-- Title
Numeric "for" (float conversions)
-- Input
function main {
    for i in [0.0 -> 10.0] {}
    for i in [0.0, 2.0 -> 10.0] {}

    for i in [0 -> 10.0] {}
    for i in [10.0 <- 0] {}

    for i in [1.0, 3 <- 10] {}
    for i in [1, 3.0 -> 10] {}
    for i in [1, 3 <= 10.0] {}
}
-- Output
function main: Void {
    for variable i: Float in [(0.000000: Float) -> (10.000000: Float)] {
    }
    for variable i: Float in [(0.000000: Float), (2.000000: Float) -> (10.000000: Float)] {
    }
    for variable i: Float in [((0: Integer) as: Float) -> (10.000000: Float)] {
    }
    for variable i: Float in [(10.000000: Float) <- ((0: Integer) as: Float)] {
    }
    for variable i: Float in [(1.000000: Float), ((3: Integer) as: Float) <- ((10: Integer) as: Float)] {
    }
    for variable i: Float in [((1: Integer) as: Float), (3.000000: Float) -> ((10: Integer) as: Float)] {
    }
    for variable i: Float in [((1: Integer) as: Float), ((3: Integer) as: Float) <= (10.000000: Float)] {
    }
}
--------------------------------------------------------------------------------
-- Title
Numeric "for" ("v" is value)
-- Input
function main {
    for i in [0 -> 10] {
        i = 5;
    }
}
-- Output
line 3:
    semantic error: can't assign to 'i' since it was declared as a value
--------------------------------------------------------------------------------
-- Title
Numeric "for" (invalid type: [ok -> invalid])
-- Input
function main {
    for i in [0 -> true] {}
}
-- Output
line 2:
    semantic error: elements of a range expression must have numeric types
--------------------------------------------------------------------------------
-- Title
Numeric "for" (invalid type: [invalid -> ok])
-- Input
function main {
    for i in ["0" -> 10] {}
}
-- Output
line 2:
    semantic error: elements of a range expression must have numeric types
--------------------------------------------------------------------------------
-- Title
Numeric "for" (invalid type: [ok, invalid -> ok])
-- Input
function main {
    for i in [0, [2] -> 10] {}
}
-- Output
line 2:
    semantic error: elements of a range expression must have numeric types
