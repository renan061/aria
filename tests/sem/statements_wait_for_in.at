--------------------------------------------------------------------------------
-- Title
Ok
-- Input
monitor M {
    value queue = ConditionQueue();
    initializer {}
    function f {
        wait for true in queue;
    }
}
-- Output
monitor M {
    value queue: ConditionQueue = (ConditionQueue(): ConditionQueue)
    function M: M {
    }
    function f(value self: M): Void {
        wait for (true: Boolean) in (queue: ConditionQueue)
    }
}
--------------------------------------------------------------------------------
-- Title
Invalid wait-for-in outside a monitor
-- Input
function main {
    wait for true in ConditionQueue();
}
-- Output
line 2:
    semantic error: invalid use of 'wait-for-in' statement outside a monitor's body
--------------------------------------------------------------------------------
-- Title
Invalid wait-for-in inside a monitor's initializer
-- Input
monitor M {
    initializer {
        wait for true in ConditionQueue();
    }
}
-- Output
line 3:
    semantic error: invalid use of 'wait-for-in' statement inside a monitor's initializer
--------------------------------------------------------------------------------
-- Title
Invalid condition type
-- Input
monitor M {
    function f {
        wait for 1 in ConditionQueue();
    }
}
-- Output
line 3:
    semantic error: invalid type 'Integer' for condition (expecting Boolean)
--------------------------------------------------------------------------------
-- Title
Invalid condition queue type
-- Input
monitor M {
    function f {
        wait for true in 1;
    }
}
-- Output
line 3:
    semantic error: 'wait-for-in' statement's second expression must be of type ConditionQueue
