--------------------------------------------------------------------------------
-- Title
Calling an interface type (assertion fail)
-- Input
// interface I {}
function main {
    // value i = I();
}
-- Output
function main: Void {
}
--------------------------------------------------------------------------------
-- Title
Monitor with more than one initializer (Segmentation Fault)
-- Input
monitor M {
    initializer {}
    // initializer {}
}
function main {
    value m = M();
}
-- Output
monitor M {
    function M: M {
    }
}
function main: Void {
    value m: M = (M(): M)
}
--------------------------------------------------------------------------------
-- Title
Should detect lack of return statement
-- Input
function f: Boolean {
    // not returning a boolean
}
-- Output
function f: Boolean {
}
--------------------------------------------------------------------------------
-- Title
Compound assignment
-- Input
function main {
    variable a = 0;

    /* Seg Fault
    a += 1;
    a -= 1;
    a *= 1;
    a /= 1;
    */

    /*
    a = ((a: Integer) +:Integer (1: Integer));
    a = ((a: Integer) -:Integer (1: Integer));
    a = ((a: Integer) *:Integer (1: Integer));
    a = ((a: Integer) /:Integer (1: Integer));
    */
}
-- Output
function main: Void {
    variable a: Integer = (0: Integer)
}
