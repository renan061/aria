testVariableDefinition
-----
definition: value Integer (1)
definition: value Float (10.0)
-----
definition: variable Integer (2)
definition: variable Float (20.0)

----------------------------------------

testAssignment
-----
assignment: variable initialized (0)
-----
assignment: variable not initialized 1 (string)
assignment: variable not initialized 1 (another string)
-----
assignment: variable not initialized 2 (1.2)
assignment: variable not initialized 2 (1.0)

----------------------------------------

testCall
-----
call: zero parameters
-----
call: one parameter
-----
call: many parameters (-9)
-----
call: recursive (120)

----------------------------------------

testReturn
-----
return: boolean (1)
return: integer (15)
return: float (-0.5)
return: string (Aria)
-----
return: array [0] (105)
return: array [1] (205)
return: array [2] (305)
-----
return: monitor (M)

----------------------------------------

testIf
-----
if true: before
if true: inside
if true: after
-----
if false: before
if false: after

----------------------------------------

testIfElse
-----
if-else true: before
if-else true: inside if
if-else true: after
-----
if-else false: before
if-else false: inside else
if-else false: after

----------------------------------------

testWhile
-----
while false: before
while false: after
-----
while loop: before
while loop: inside (1)
while loop: inside (2)
while loop: inside (3)
while loop: inside (4)
while loop: inside (5)
while loop: after
while loop: ok

----------------------------------------

testBlock
-----
block: inside (12)
block: outside (10)

----------------------------------------

testBooleans
-----
literal boolean: 1
literal boolean: 0
-----
variable boolean: 1
variable boolean: 0
-----
call boolean: 1
call boolean: 0
-----
or boolean: true-true (1)
or boolean: true-false (1)
or boolean: false-true (1)
or boolean: false-false (0)
-----
and boolean: true-true (1)
and boolean: true-false (0)
and boolean: false-true (0)
and boolean: false-false (0)
-----
== boolean: true == true (1)
== boolean: true == false (0)
== boolean: false == true (0)
== boolean: false == false (1)
-----
== boolean: 10 == 10 (1)
== boolean: 10 == 20 (0)
== boolean: 20 == 10 (0)
== boolean: 20 == 20 (1)
-----
== boolean: 5.5 == 5.5 (1)
== boolean: 5.5 == 3.7 (0)
== boolean: 3.7 == 5.5 (0)
== boolean: 3.7 == 3.7 (1)
-----
== boolean: 15.0 == 15 (1)
== boolean: 6 == 6.0 (1)
== boolean: 2.0000000001 == 2 (0)
== boolean: 1 == 0.9999999999 (0)
-----
!= boolean: true != true (0)
!= boolean: true != false (1)
!= boolean: false != true (1)
!= boolean: false != false (0)
-----
!= boolean: 10 != 10 (0)
!= boolean: 10 != 20 (1)
!= boolean: 20 != 10 (1)
!= boolean: 20 != 20 (0)
-----
!= boolean: 5.5 != 5.5 (0)
!= boolean: 5.5 != 3.7 (1)
!= boolean: 3.7 != 5.5 (1)
!= boolean: 3.7 != 3.7 (0)
-----
!= boolean: 15.0 != 15 (0)
!= boolean: 6 != 6.0 (0)
!= boolean: 2.0000000001 != 2 (1)
!= boolean: 1 != 0.9999999999 (1)
-----
<= boolean: 10 <= 11 (1)
<= boolean: 18 <= 19.0 (1)
<= boolean: 109.9999999999 <= 110 (1)
<= boolean: 10.2344 <= 10.23442 (1)
<= boolean: 20 <= 20 (1)
<= boolean: 2200 <= 2200.0 (1)
<= boolean: 234.0 <= 234 (1)
<= boolean: 00.192947 <= 00.192947 (1)
<= boolean: 32 <= 31 (0)
<= boolean: 3.0000000001 <= 3 (0)
<= boolean: 3112 <= 3111.9999999999 (0)
<= boolean: 0.00000001 <= 0.000000001 (0)
-----
>= boolean: 10 >= 11 (0)
>= boolean: 18 >= 19.0 (0)
>= boolean: 109.9999999999 >= 110 (0)
>= boolean: 10.2344 >= 10.23442 (0)
>= boolean: 20 >= 20 (1)
>= boolean: 2200 >= 2200.0 (1)
>= boolean: 234.0 >= 234 (1)
>= boolean: 00.192947 >= 00.192947 (1)
>= boolean: 32 >= 31 (1)
>= boolean: 3.0000000001 >= 3 (1)
>= boolean: 3112 >= 3111.9999999999 (1)
>= boolean: 0.00000001 >= 0.000000001 (1)
-----
< boolean: 10 < 11 (1)
< boolean: 18 < 19.0 (1)
< boolean: 109.9999999999 < 110 (1)
< boolean: 10.2344 < 10.23442 (1)
< boolean: 20 < 20 (0)
< boolean: 2200 < 2200.0 (0)
< boolean: 234.0 < 234 (0)
< boolean: 00.192947 < 00.192947 (0)
< boolean: 32 < 31 (0)
< boolean: 3.0000000001 < 3 (0)
< boolean: 3112 < 3111.9999999999 (0)
< boolean: 0.00000001 < 0.000000001 (0)
-----
> boolean: 10 > 11 (0)
> boolean: 18 > 19.0 (0)
> boolean: 109.9999999999 > 110 (0)
> boolean: 10.2344 > 10.23442 (0)
> boolean: 20 > 20 (0)
> boolean: 2200 > 2200.0 (0)
> boolean: 234.0 > 234 (0)
> boolean: 00.192947 > 00.192947 (0)
> boolean: 32 > 31 (1)
> boolean: 3.0000000001 > 3 (1)
> boolean: 3112 > 3111.9999999999 (1)
> boolean: 0.00000001 > 0.000000001 (1)
-----
not boolean: not true (0)
not boolean: not false (1)

----------------------------------------

testLiteralIntegers
-----
literal integer: (-1)
literal integer: (0)
literal integer: (0)
literal integer: (1)
literal integer: (-2147483648)
literal integer: (2147483647)

----------------------------------------

testLiteralFloats
-----
literal float: (-0.583747)
literal float: (0.000000)
literal float: (-0.000000)
literal float: (0.9999999999)

----------------------------------------

testLiteralStrings
-----
literal string: ()
literal string: (string)
literal string: (new
line)

----------------------------------------

testLiteralArrays
-----
literal integer array: [1]
literal integer array: [10, 20]
literal integer array: [100, 200, 300]
literal float array: [1000.0, 2000.0, 3000.0, 4000.0]
literal array of arrays: [[0], [1, 2], [3, 4, 5], [6, 7, 8, 9]]

----------------------------------------

testVariables
-----
variable: value (1)
-----
variable: variable (3.5)
-----
variable: indexed function (one)
variable: indexed function (two)
variable: indexed function (three)
variable: indexed function (one)
-----
variable: indexed variable (one)
variable: indexed variable (two)
variable: indexed variable (three)
variable: indexed variable (one)

----------------------------------------

testCalls
-----
call: (3)

----------------------------------------

testArithmetics
-----
unary minus: -0 (0)
unary minus: -1 (-1)
unary minus: -1000 (-1000)
unary minus: -0.0 (-0.0)
unary minus: -0.7 (-0.7)
-----
binary +: 0 + 0 (0)
binary +: 155 + 12 (167)
binary +: -25 + 100 (75)
binary +: -2 + -78 (-80)
binary +: 2.67 + -12.33 (-9.66)
-----
binary -: 1 - 1 (0)
binary -: 155 - 12 (143)
binary -: -25 - 100 (-125)
binary -: -2 - -78 (76)
binary -: 2.67 - -12.33 (15.0)
-----
binary *: -1 * 0 (0)
binary *: 0 * 1 (0)
binary *: 1 * 1 (1)
binary *: 155 * 12 (1860)
binary *: -25 * 100 (-2500)
binary *: -2 * -78 (156)
binary *: 2.67 * -12.33 (-32.9211)
-----
binary /: 0 / 1 (0)
binary /: 1 / 1 (1)
binary /: 10 / 5 (2)
binary /: 155.0 / 12 (12.91667)
binary /: -25 / 100.0 (-0.25)
binary /: -2.0 / -78 (0.02564)
binary /: 2.67 / -12.33 (-0.2165)

----------------------------------------

testCasts
-----
cast: integer to float (1.0)
-----
cast: float to integer (1)

----------------------------------------

testShortCircuitEvaluation
-----
short-circuit: true and true (6)
short-circuit: true and false (-2)
short-circuit: false and true (-5)
short-circuit: false and false (-5)
-----
short-circuit: true or true (3)
short-circuit: true or false (3)
short-circuit: false or true (-2)
short-circuit: false or false (-10)

----------------------------------------

wild
-----
print matrix: a(ij) = (i >= j)
[1] - [0] - [0] - [0] - [0]
[1] - [1] - [0] - [0] - [0]
[1] - [1] - [1] - [0] - [0]
[1] - [1] - [1] - [1] - [0]
[1] - [1] - [1] - [1] - [1]
-----
nested condition: not (1 > 4.9) and (3 == 1) (0)
nested condition: (-0.0001 <= 0) or (-0.0001 >= -0.01) (1)
nested condition: ((19.5 - 18.5) / 2.0) > 0 and not true (0)
