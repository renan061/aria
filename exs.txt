/*
 * O exemplo assume que:
 *
 * - Existem as funções 'append', 'length' e 'capacity' que operam sobre arrays.
 * - Existe o tipo ("classe" / "struct") Queue.
 *
 */

monitor Stack
{
	private stackIsFullQueue, stackIsEmptyQueue Queue

	private function stackIsNotFull() Bool {
		return lenght(values) < capacity(s.values)
	}

	private function stackIsNotEmpty() Bool {
		return lenght(values) > 0
	}

	private current Int
	private values [Char]

	init(size Int) {
		stackIsFullQueue = Queue()
		stackIsEmptyQueue = Queue()
		values = [Char](size)
	}

	function push(id, value Char) {
		wait in stackIsFullQueue until stackIsNotFull
		values = append(values, value)
		signal stackIsEmptyQueue
	}

	function pop(id Char) Char {
		wait in stackIsEmptyQueue until stackIsNotEmpty

		index := length(values) - 1
		value := values[index]
		values[index] = 0

		signal stackIsFullQueue
		return value
	}
}
