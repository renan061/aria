/*
 *	Grammar
 *
 *	Abreviações:
 *		- {something} significa sequência de zero ou mais 'something'
 *		- [something] significa que 'something' é opcional
 */

program
	: {definition}

definition
	: function-definition
	| monitor-definition

function-definition
	: 'function' LOWER-ID parameters [':' type] block

parameters
	: '(' [parameter {',' parameter}] ')'

parameter
	: variable-declaration

variable-declaration
	: LOWER-ID {',' LOWER-ID} ':' type

type
	: UPPER-ID
	| '[' type ']' // array type

block
	: '{' {block-content} '}'

block-content
	: variable-declaration
	| statement

statement
	: simple-statement
	| compound-statement

simple-statement
	: variable '=' expression
	| LOWER-ID ':=' expression
	| function-call
	| 'while' expression 'wait' 'in' variable
	| 'signal' variable
	| 'broadcast' variable
	| 'return' [expression]

compound-statement
	: 'if' expression block
	| 'if' expression block 'else' block
	| 'while' expression block
	| 'for' [?] ';' expression ';' [?] block
	| 'spawn' block
	| block

variable
	: LOWER-ID
	| expression-primary '[' expression ']'

expression
	: expression-or

expression-or
	: expression-or 'or' expression-and
	| expression-and

expression-and
	: expression-and 'and' expression-comparison
	| expression-comparison

expression-comparison
	: expression-addition '==' expression-addition
	| expression-addition '<=' expression-addition
	| expression-addition '>=' expression-addition
	| expression-addition '<' expression-addition
	| expression-addition '>' expression-addition
	| expression-addition

expression-addition
	: expression-addition '+' expression-multiplication
	| expression-addition '-' expression-multiplication
	| expression-multiplication

expression-multiplication
	: expression-multiplication '*' expression-unary
	| expression-multiplication '/' expression-unary
	| expression-unary

expression-unary
	: '-' expression-unary
	| 'not' expression-unary
	| expression-primary

expression-primary
	: literal
	| variable
	| function-call
	| '(' expression ')'

literal
	: 'true'
	| 'false'
	| INT
	| FLOAT
	| STRING

function-call
	: LOWER-ID arguments						// normal function
	| type arguments							// constructor call
	| expression-primary '.' LOWER-ID arguments	// monitor method

arguments
	: '(' [expression {',' expression}] ')'

monitor-definition
	: 'monitor' UPPER-ID monitor-body

monitor-body
	: '{' {monitor-body-content} '}'

monitor-body-content
	: variable-declaration
	| constructor-definition
	| ['private'] function-definition

constructor-definition
	: 'initializer' parameters block
